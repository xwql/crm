<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crm.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="cn.crm.bean.Contract">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="cust_id" jdbcType="BIGINT" property="custId" />
    <result column="money" jdbcType="BIGINT" property="money" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="enable" jdbcType="INTEGER" property="enable" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contract_name, cust_id, money, content, start_time, end_time, enable
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from contract
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.crm.bean.Contract">
    insert into contract (id, contract_name, cust_id, 
      money, content, start_time, 
      end_time, enable)
    values (#{id,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, #{custId,jdbcType=BIGINT},
      #{money,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{enable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.crm.bean.Contract">
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="enable != null">
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.crm.bean.Contract">
    update contract
    <set>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.crm.bean.Contract">
    update contract
    set contract_name = #{contractName,jdbcType=VARCHAR},
      cust_id = #{custId,jdbcType=BIGINT},
      money = #{money,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <sql id="selectContractListWhere">
    <where>
      <if test="enable != null">
        enable = #{enable}
      </if>
      <if test="custId != null" >
        and cust_id = #{custId}
      </if>
      <if test="startTime != null" >
        and start_time &gt; #{startTime}
      </if>
      <if test="endTime != null" >
        and end_time &lt; #{endTime}
      </if>
    </where>
  </sql>
  <select id="selectContractListCount" parameterType="cn.crm.bean.Contract" resultType="int">
    select count(*)
    from contract
    <include refid="selectContractListWhere"/>
  </select>
  <select id="selectContractList" parameterType="cn.crm.bean.Contract" resultType="cn.crm.bean.Contract">
    select id,contract_name, cust_id,money,content,start_time,end_time
    from contract
    <include refid="selectContractListWhere"/>
    order by end_time desc
    <if test="start !=null and rows != null">
      limit #{start},#{rows}
    </if>
  </select>
</mapper>